<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java初学小程序编写MBTI项目mini版-2</title>
    <url>/2024/06/19/Java%E5%88%9D%E5%AD%A6%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BC%96%E5%86%99MBTI%E9%A1%B9%E7%9B%AEmini%E7%89%88-2/</url>
    <content><![CDATA[<!-- 
    title: 文章标题
    date: 文章创建时间
    update: 文章修改时间
    tags: 标签
    categories： 分类  后端：back-end   前端：front-end  其余：outher-end
    keywords: 文章关键字
 -->

<h1 id="编写MBTI小程序第二版-编写大体页面代码、统计答题结果"><a href="#编写MBTI小程序第二版-编写大体页面代码、统计答题结果" class="headerlink" title="编写MBTI小程序第二版(编写大体页面代码、统计答题结果)"></a>编写MBTI小程序第二版(编写大体页面代码、统计答题结果)</h1><p>   <a href="https://github.com/lisanjin9/MBTI-test-mini">源代码在这里嗷 ✈</a></p>
<h2 id="1-存放测试数据-创建data文件夹存放数据"><a href="#1-存放测试数据-创建data文件夹存放数据" class="headerlink" title="1. 存放测试数据(创建data文件夹存放数据)"></a>1. 存放测试数据(创建data文件夹存放数据)</h2>  <figure class="highlight json"><table><tr><td class="code"><pre><span class="line">  questions.json 问题及选项</span><br><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;I&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;独自工作&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;E&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;与他人合作&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你通常更喜欢&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;J&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;喜欢有明确的计划&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;P&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;更愿意随机应变&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;当安排活动时&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;T&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;认为应该严格遵守&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;认为应灵活运用&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你如何看待规则&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;E&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;经常是说话的人&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;I&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;更倾向于倾听&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;在社交场合中&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;J&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;先研究再行动&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;P&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;边做边学习&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;面对新的挑战&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;S&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;注重细节和事实&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;N&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;注重概念和想象&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;在日常生活中&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;T&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;更多基于逻辑分析&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;更多基于个人情感&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;做决定时&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;S&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;喜欢有结构和常规&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;N&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;喜欢自由和灵活性&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;对于日常安排&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;P&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;首先考虑可能性&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;J&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;首先考虑后果&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;当遇到问题时&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;T&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;时间是一种宝贵的资源&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;时间是相对灵活的概念&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你如何看待时间&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>
<h2 id="2-编写答题页面的问题及答案选项"><a href="#2-编写答题页面的问题及答案选项" class="headerlink" title="2. 编写答题页面的问题及答案选项"></a>2. 编写答题页面的问题及答案选项</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const questions = question[0];   获取到题目</span><br><span class="line"> const [current, setcurrent] = useState&lt;number&gt;(1);  标记题号，题号从 1开始计数</span><br><span class="line"></span><br><span class="line"> // 根据上一题 下一题修改题目以及选项</span><br><span class="line"> const [currentQuestion, setCurrentQuestion] = useState(question[0]);</span><br><span class="line"> const questionOption = currentQuestion.options.map((option) =&gt; &#123;</span><br><span class="line">   return &#123; label: `$&#123;option.key&#125;.$&#123;option.value&#125;`, value: option.key &#125;; // return &#123; label: option.key + &quot;、&quot; + option.value, value: option.key &#125;;</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"> // 存储当前问题的用户答案</span><br><span class="line"> const [currentAnswer, setCurrentAnswer] = useState&lt;String&gt;();</span><br><span class="line"></span><br><span class="line"> // 存储用户所有答案</span><br><span class="line"> const [answerList] = useState&lt;String[]&gt;([]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> // 钩子函数，通过监视 current 参数是否发生变化， 发生变化后调用 setCurrentQuestion 函数，更新当前题目</span><br><span class="line"> useEffect(() =&gt; &#123;</span><br><span class="line">   //更新题目以及选项</span><br><span class="line">   setCurrentQuestion(question[current - 1]);</span><br><span class="line">   // 更新用户答案存入list中</span><br><span class="line">   setCurrentAnswer(answerList[current - 1]);</span><br><span class="line"> &#125;, [current]);</span><br><span class="line"></span><br><span class="line">return (</span><br><span class="line">   &lt;View className=&quot;quPage&quot;&gt;    定义答题页面的name 用来编写style</span><br><span class="line">     &#123;/*&#123;JSON.stringify(answerList)&#125;*/&#125; 测试最终选择的数据能否存入list中</span><br><span class="line">     &lt;View className=&quot;qu-oneTitle&quot;&gt;</span><br><span class="line">       &#123;current&#125;、&#123;questions.title&#125;    题号.问题</span><br><span class="line">     &lt;/View&gt;</span><br><span class="line">     &lt;view className=&quot;options-wrapper&quot;&gt;</span><br><span class="line">       &lt;AtRadio</span><br><span class="line">         options=&#123;questionOption&#125;    对应题号的选项展示</span><br><span class="line">         onClick=&#123;(value) =&gt; &#123;</span><br><span class="line">           setCurrentAnswer(value);   点击选项后 将答案赋值给本题定义的参数</span><br><span class="line">           answerList[current - 1] = value;  同时将答案存入list中，用来进行结果分析</span><br><span class="line">         &#125;&#125;</span><br><span class="line">         value=&#123;currentAnswer&#125; </span><br><span class="line">       /&gt;</span><br><span class="line">     &lt;/view&gt;</span><br><span class="line">     &#123;current &lt; question.length &amp;&amp; (</span><br><span class="line">       &lt;AtButton</span><br><span class="line">         className=&quot;qu-primary&quot;</span><br><span class="line">         type=&quot;primary&quot;</span><br><span class="line">         disabled=&#123;!currentAnswer&#125;   本体不选择答案的话无法进入下一题，否则会对最终结果分析产生问题</span><br><span class="line">         circle</span><br><span class="line">         onClick=&#123;() =&gt; setcurrent(current + 1)&#125;  点击按钮进入下一题</span><br><span class="line">       &gt;</span><br><span class="line">         下一题</span><br><span class="line">       &lt;/AtButton&gt;</span><br><span class="line">     )&#125;</span><br><span class="line">     &#123;current == question.length &amp;&amp; (</span><br><span class="line">       &lt;AtButton className=&quot;qu-primary&quot; type=&quot;primary&quot; circle&gt;  查看结果第三版做</span><br><span class="line">         查看结果</span><br><span class="line">       &lt;/AtButton&gt;</span><br><span class="line">     )&#125;</span><br><span class="line">     &#123;current &gt; 1 &amp;&amp; (</span><br><span class="line">       &lt;AtButton</span><br><span class="line">         className=&quot;qu-primary&quot;</span><br><span class="line">         circle</span><br><span class="line">         onClick=&#123;() =&gt; setcurrent(current - 1)&#125;  点击按钮进入上一题</span><br><span class="line">       &gt;</span><br><span class="line">         上一题</span><br><span class="line">       &lt;/AtButton&gt;</span><br><span class="line">     )&#125;</span><br><span class="line">     &lt;GlobalFooter /&gt;</span><br><span class="line">   &lt;/View&gt;</span><br><span class="line"> );</span><br></pre></td></tr></table></figure>
<h2 id="3-展示结果"><a href="#3-展示结果" class="headerlink" title="3. 展示结果"></a>3. 展示结果</h2><p><img src="/../video/MBTI%E5%B0%8F%E7%A8%8B%E5%BA%8Fmini%E7%89%88(2).mp4" alt="点击查看视频"></p>
]]></content>
      <categories>
        <category>小程序</category>
        <category>MBTI小程序</category>
      </categories>
      <tags>
        <tag>taro</tag>
        <tag>taro ui</tag>
        <tag>ts</tag>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>Java初学小程序编写MBTI项目mini版-3(完结版)</title>
    <url>/2024/06/24/Java%E5%88%9D%E5%AD%A6%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BC%96%E5%86%99MBTI%E9%A1%B9%E7%9B%AEmini%E7%89%88-3/</url>
    <content><![CDATA[<!-- 
    title: 文章标题
    date: 文章创建时间
    update: 文章修改时间
    tags: 标签
    categories： 分类  后端：back-end   前端：front-end  其余：outher-end
    keywords: 文章关键字
 -->

<h1 id="编写MBTI小程序第三版-通过CodeGeeX实现结果解析算法进行用户选择的结果进行解析"><a href="#编写MBTI小程序第三版-通过CodeGeeX实现结果解析算法进行用户选择的结果进行解析" class="headerlink" title="编写MBTI小程序第三版(通过CodeGeeX实现结果解析算法进行用户选择的结果进行解析)"></a>编写MBTI小程序第三版(通过CodeGeeX实现结果解析算法进行用户选择的结果进行解析)</h1><p> <a href="https://github.com/lisanjin9/MBTI-test-mini">源代码在这里嗷 ✈</a></p>
<h2 id="通过-Taro-主要组件来实现"><a href="#通过-Taro-主要组件来实现" class="headerlink" title="通过 Taro 主要组件来实现"></a>通过 Taro 主要组件来实现</h2> <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Taro</span>.<span class="title function_">setStorageSync</span>(<span class="string">&quot;answerList&quot;</span>, answerList);  <span class="comment">// 通过setStorageSync 来实现数据存储</span></span><br><span class="line"> <span class="comment">//获取答案</span></span><br><span class="line">  <span class="keyword">const</span> answerList = <span class="title class_">Taro</span>.<span class="title function_">getStorageSync</span>(<span class="string">&quot;answerList&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加点击事件，点击后 通过navigateTo来实现页面跳转</span></span><br><span class="line">onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="title class_">Taro</span>.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;/pages/doQuestion/index&quot;</span>,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加点击事件，点击后 通过reLaunch来实现清楚过多的没用页面</span></span><br><span class="line">onClick=&#123;<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="title class_">Taro</span>.<span class="title function_">reLaunch</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;/pages/index/index&quot;</span>,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 如果答案为空提示异常</span></span><br><span class="line">  <span class="keyword">if</span> (!answerList || answerList.<span class="property">length</span> &lt; <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="title class_">Taro</span>.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&quot;答案为空&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;error&quot;</span>,</span><br><span class="line">      <span class="attr">duration</span>: <span class="number">3000</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>小程序</category>
        <category>MBTI小程序</category>
      </categories>
      <tags>
        <tag>taro</tag>
        <tag>taro ui</tag>
        <tag>ts</tag>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub搭建的博客配置域名</title>
    <url>/2024/06/16/GitHub%E6%90%AD%E5%BB%BA%E7%9A%84%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E5%9F%9F%E5%90%8D/</url>
    <content><![CDATA[<!-- 
    title: 文章标题
    date: 文章创建时间
    update: 文章修改时间
    tags: 标签
    categories： 分类  后端：back-end   前端：front-end  其余：outher-end
    keywords: 文章关键字
 -->
<h2 id="上篇文章已经能够正常访问自己的博客了"><a href="#上篇文章已经能够正常访问自己的博客了" class="headerlink" title="上篇文章已经能够正常访问自己的博客了"></a>上篇文章已经能够正常访问自己的博客了</h2><p> <strong><a href="https://lisanjin9.github.io/2024/06/13/hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">hexo+GitHub搭建个人博客</a></strong> </p>
<h2 id="本篇文章来配置博客域名"><a href="#本篇文章来配置博客域名" class="headerlink" title="本篇文章来配置博客域名"></a>本篇文章来配置博客域名</h2><h3 id="1-申请域名"><a href="#1-申请域名" class="headerlink" title="1. 申请域名"></a>1. 申请域名</h3><p> 我已经申请域名，在腾讯云 <strong>lisanjin9.top</strong> 后缀无所谓， top是激励自己积极向上<br> <img src="/../imgList/yuming.png" alt="alt text"></p>
<h3 id="2-在source目录下创建CNAME文件"><a href="#2-在source目录下创建CNAME文件" class="headerlink" title="2. 在source目录下创建CNAME文件"></a>2. 在source目录下创建CNAME文件</h3><p> <img src="/../imgList/CNAME.png" alt="alt text"></p>
<h3 id="3-在根目录文件夹下寻找-config-yml-文件，修改文件里边的url路径"><a href="#3-在根目录文件夹下寻找-config-yml-文件，修改文件里边的url路径" class="headerlink" title="3. 在根目录文件夹下寻找**_config.yml**文件，修改文件里边的url路径"></a>3. 在根目录文件夹下寻找**_config.yml**文件，修改文件里边的url路径</h3><p> <img src="/../imgList/upURL.png" alt="alt text"></p>
<h3 id="4-修改GitHub上的配置，打开博客仓库，点击settings"><a href="#4-修改GitHub上的配置，打开博客仓库，点击settings" class="headerlink" title="4. 修改GitHub上的配置，打开博客仓库，点击settings"></a>4. 修改GitHub上的配置，打开博客仓库，点击settings</h3><p> <img src="/../imgList/updateSettings.png" alt="alt text"></p>
<h3 id="5-点击save，显示下图则配置成功"><a href="#5-点击save，显示下图则配置成功" class="headerlink" title="5. 点击save，显示下图则配置成功"></a>5. 点击<strong>save</strong>，显示下图则配置成功</h3><p> <img src="/../imgList/showDNS.png" alt="alt text"></p>
<h3 id="6-解析域名"><a href="#6-解析域名" class="headerlink" title="6. 解析域名"></a>6. 解析域名</h3><p> 打开域名控制台，点击后边的解析<br> <img src="/../imgList/updateym.png" alt="alt text"></p>
]]></content>
      <categories>
        <category>博客</category>
        <category>搭建个人博客</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>域名</tag>
        <tag>hexo</tag>
        <tag>Md语法</tag>
      </tags>
  </entry>
  <entry>
    <title>Java初学小程序编写MBTI项目mini版-1</title>
    <url>/2024/06/18/Java%E5%88%9D%E5%AD%A6%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BC%96%E5%86%99MBTI%E9%A1%B9%E7%9B%AEmini%E7%89%88/</url>
    <content><![CDATA[<!-- 
    title: 文章标题
    date: 文章创建时间
    update: 文章修改时间
    tags: 标签
    categories： 分类  后端：back-end   前端：front-end  其余：outher-end
    keywords: 文章关键字
 -->

<h1 id="编写MBTI小程序第一版-初始化项目、编写首页代码"><a href="#编写MBTI小程序第一版-初始化项目、编写首页代码" class="headerlink" title="编写MBTI小程序第一版(初始化项目、编写首页代码)"></a>编写MBTI小程序第一版(初始化项目、编写首页代码)</h1><p>  <a href="https://github.com/lisanjin9/MBTI-test-mini">源代码在这里嗷 ✈</a></p>
<h2 id="1-初始化项目-使用taro-ts"><a href="#1-初始化项目-使用taro-ts" class="headerlink" title="1. 初始化项目 使用taro + ts"></a>1. 初始化项目 使用taro + ts</h2><p> 初始化项目后，安装依赖<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><br> 正常启动项目，全局入口<strong>app.ts</strong>处引入taro ui 组件<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &#x27;taro-ui/dist/style/index.scss&#x27;</span><br></pre></td></tr></table></figure></p>
<h2 id="2-编写初始化页面代码"><a href="#2-编写初始化页面代码" class="headerlink" title="2. 编写初始化页面代码"></a>2. 编写初始化页面代码</h2><p> <img src="/../imgList/MBTI/MBTI-1.png" alt="初始化前端index首页面"><br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &#123; View, Image &#125; from &quot;@tarojs/components&quot;;</span><br><span class="line">import &quot;taro-ui/dist/style/components/button.scss&quot;; // 按需引入</span><br><span class="line">import &#123; AtButton &#125; from &quot;taro-ui&quot;;</span><br><span class="line">import homeBg from &quot;../../ImglistDir/homeBg.png&quot;;</span><br><span class="line"></span><br><span class="line">import &quot;./index.scss&quot;;</span><br><span class="line">import GlobalFooter from &quot;../../components/GlobalFooter&quot;;</span><br><span class="line"></span><br><span class="line">export default () =&gt; &#123;</span><br><span class="line">  return (</span><br><span class="line">    &lt;View className=&quot;homePage&quot;&gt;</span><br><span class="line">      &lt;View className=&quot;oneTitle&quot;&gt;MBTI 性格测试&lt;/View&gt;</span><br><span class="line">      &lt;View className=&quot;twoTitle&quot;&gt;</span><br><span class="line">        只需 2 分钟，就能非常准确的描述出你是谁，以及你的性格特点</span><br><span class="line">      &lt;/View&gt;</span><br><span class="line">      &lt;AtButton className=&quot;txtBtn&quot; type=&quot;primary&quot; circle&gt;</span><br><span class="line">        开始测试</span><br><span class="line">      &lt;/AtButton&gt;</span><br><span class="line">      &lt;Image className=&quot;homeBg&quot; src=&#123;homeBg&#125; /&gt;</span><br><span class="line">      &lt;GlobalFooter /&gt;</span><br><span class="line">    &lt;/View&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h2 id="3-编写相关样式"><a href="#3-编写相关样式" class="headerlink" title="3. 编写相关样式"></a>3. 编写相关样式</h2><p><img src="/../imgList/MBTI/MBTI-2.png" alt="编写相关样式"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.homePage &#123;</span><br><span class="line">  background-color: #A2C7D7;</span><br><span class="line"></span><br><span class="line">  .oneTitle &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    color: red;</span><br><span class="line">    font-size: 6vw;</span><br><span class="line">    margin-top: 10px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .twoTitle &#123;</span><br><span class="line">    color: darkgoldenrod;</span><br><span class="line">    font-size: 4vw;</span><br><span class="line">    padding-top: 5px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .txtBtn &#123;</span><br><span class="line">    width: 60vw;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-导入微信开发者工具-选择测试号"><a href="#4-导入微信开发者工具-选择测试号" class="headerlink" title="4. 导入微信开发者工具, 选择测试号"></a>4. 导入微信开发者工具, 选择<strong>测试号</strong></h2><p><img src="/../imgList/MBTI/MBTI-3.png" alt="导入微信开发者工具"></p>
<h2 id="5-编译后就能出现结果了"><a href="#5-编译后就能出现结果了" class="headerlink" title="5. 编译后就能出现结果了"></a>5. 编译后就能出现结果了</h2><p><img src="/../imgList/MBTI/MBTI-4.png" alt="出现结果"></p>
]]></content>
      <categories>
        <category>小程序</category>
        <category>MBTI小程序</category>
      </categories>
      <tags>
        <tag>taro</tag>
        <tag>taro ui</tag>
        <tag>ts</tag>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>Java基础</title>
    <url>/2024/06/29/Java%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<!-- 
    title: 文章标题
    date: 文章创建时间
    update: 文章修改时间
    tags: 标签
    categories： 分类  后端：back-end   前端：front-end  其余：outher-end
    keywords: 文章关键字
 -->

<h1 id="1-StringUtils中-isNotEmpty-和isNotBlank的区别"><a href="#1-StringUtils中-isNotEmpty-和isNotBlank的区别" class="headerlink" title="1. StringUtils中 isNotEmpty 和isNotBlank的区别"></a>1. StringUtils中 isNotEmpty 和isNotBlank的区别</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">总的来说是多了个空格的判断</span><br><span class="line">StringUtils.isNotEmpty(str)  ==    str!=<span class="literal">null</span> &amp;&amp; str.length &gt; <span class="number">0</span>;</span><br><span class="line">StringUtils.isNotBlank(str)  ==    str!=<span class="literal">null</span> &amp;&amp; str.length&gt;<span class="number">0</span> &amp;&amp; str.trim().length() &gt; <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">同理</span><br><span class="line">StringUtils.isEmpty(str)  ==    str==<span class="literal">null</span> || str.length == <span class="number">0</span>;</span><br><span class="line">StringUtils.isBlank(str)  ==    str==<span class="literal">null</span> || str.length == <span class="number">0</span> || str.trim().length() == <span class="number">0</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="2-queryWrapper的使用"><a href="#2-queryWrapper的使用" class="headerlink" title="2. queryWrapper的使用"></a>2. queryWrapper的使用</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 需要拼接查询条件 , 同一个数据多列查询 </span></span><br><span class="line">       queryWrapper.and(qw -&gt; qw.like(<span class="string">&quot;title&quot;</span>, searchText).or().like(<span class="string">&quot;content&quot;</span>, searchText));</span><br><span class="line"><span class="comment">// 模糊查询</span></span><br><span class="line">        queryWrapper.like(StringUtils.isNotBlank(title), <span class="string">&quot;title&quot;</span>, title);</span><br><span class="line"><span class="comment">// 精确查询</span></span><br><span class="line">        【不等于】queryWrapper.ne(ObjectUtils.isNotEmpty(notId), <span class="string">&quot;id&quot;</span>, notId); </span><br><span class="line">        【等于】queryWrapper.eq(ObjectUtils.isNotEmpty(id), <span class="string">&quot;id&quot;</span>, id); </span><br><span class="line"><span class="comment">// gt、ge、lt、le</span></span><br><span class="line"></span><br><span class="line">       【大于】 queryWrapper.gt(<span class="string">&quot;last_name&quot;</span>, <span class="string">&quot;values&quot;</span>);       -&gt; 	sql 语句 where last_name &gt;<span class="string">&quot;values&quot;</span></span><br><span class="line">       【大于等于】 queryWrapper.ge(<span class="string">&quot;last_name&quot;</span>, <span class="string">&quot;values&quot;</span>);   -&gt; 	sql 语句 where last_name&gt;=<span class="string">&quot;values&quot;</span></span><br><span class="line">       【小于】 queryWrapper.lt(<span class="string">&quot;last_name&quot;</span>, <span class="string">&quot;values&quot;</span>);       -&gt;  	sql 语句 where last_name &lt;<span class="string">&quot;values&quot;</span></span><br><span class="line">       【小于等于】 queryWrapper.le(<span class="string">&quot;last_name&quot;</span>, <span class="string">&quot;values&quot;</span>);   -&gt;  	sql 语句 where last_name &lt;=<span class="string">&quot;values&quot;</span></span><br><span class="line"><span class="comment">// between、notBetween</span></span><br><span class="line">	   【在a与b之间】queryWrapper.between(<span class="string">&quot;last_name&quot;</span>,a,b) -&gt; sql 语句 where <span class="title function_">last_name</span> <span class="params">(between a and b)</span>;</span><br><span class="line">       【不在a与b之间】queryWrapper.notBetween(<span class="string">&quot;last_name&quot;</span>,a,b) -&gt; sql 语句 where <span class="title function_">last_name</span> <span class="params">(Not between a and b)</span>;</span><br><span class="line"><span class="comment">//like、notLike、likeLeft、likeRight</span></span><br><span class="line">		【字段值包含】queryWrapper.like(<span class="string">&quot;last_name&quot;</span>,<span class="string">&quot;v&quot;</span>) -&gt; sql 语句 where last_name  like %v%;</span><br><span class="line">		【字段值不包含】 queryWrapper.notlike(<span class="string">&quot;last_name&quot;</span>,<span class="string">&quot;v&quot;</span>) -&gt; sql 语句 where last_name  notlike %v%;</span><br><span class="line">		【字段值开头匹配】 queryWrapper.likeLeft(<span class="string">&quot;last_name&quot;</span>,<span class="string">&quot;v&quot;</span>) -&gt; sql 语句 where last_name  notlike %v;</span><br><span class="line">		【字段值结尾匹配】 queryWrapper.notlike(<span class="string">&quot;last_name&quot;</span>,<span class="string">&quot;v&quot;</span>) -&gt; sql 语句 where last_name  notlike  v%;</span><br><span class="line"></span><br><span class="line"><span class="comment">// isNull、isNotNull</span></span><br><span class="line">		【字段值为空的】 queryWrapper.isNull(<span class="string">&quot;last_name&quot;</span>) -&gt; sql 语句 where last_name  is <span class="literal">null</span>；</span><br><span class="line">		【字段值不为空的】 queryWrapper.isNotNull(<span class="string">&quot;last_name&quot;</span>) -&gt; sql 语句 where last_name  is not <span class="literal">null</span>；</span><br><span class="line"></span><br><span class="line"><span class="comment">// in、notIn</span></span><br><span class="line">		【字段值在区间内】  queryWrapper.in(<span class="string">&quot;last_name&quot;</span>,a,b,c) -&gt; sql 语句 where last_name <span class="title function_">in</span><span class="params">(a,b,c)</span>；</span><br><span class="line">		【字段值不在区间内】   queryWrapper.notin(<span class="string">&quot;last_name&quot;</span>,a,b,c) -&gt; sql 语句 where last_name not <span class="title function_">in</span><span class="params">(a,b,c)</span>；</span><br><span class="line"></span><br><span class="line"><span class="comment">//or、and</span></span><br><span class="line">		【多条件】  queryWrapper.notin(<span class="string">&quot;last_name&quot;</span>,a,b,c).or().eq(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;aa&quot;</span>);-&gt; sql 语句 where last_name not <span class="title function_">in</span><span class="params">(a,b,c)</span> <span class="type">or</span> <span class="variable">name</span>  <span class="operator">=</span> <span class="string">&quot;aa&quot;</span>；</span><br><span class="line">queryWrapper.notin(<span class="string">&quot;last_name&quot;</span>,a,b,c).and().eq(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;aa&quot;</span>);-&gt; sql 语句 where last_name not <span class="title function_">in</span><span class="params">(a,b,c)</span> <span class="type">and</span> <span class="variable">name</span>  <span class="operator">=</span> <span class="string">&quot;aa&quot;</span>；</span><br><span class="line"><span class="comment">// orderByAsc 、orderByDesc</span></span><br><span class="line">		【正序】 queryWrapper.orderByAsc(<span class="string">&quot;id&quot;</span>); -&gt; sql 语句   orderByAsc <span class="string">&quot;id&quot;</span> </span><br><span class="line">	    【倒序】 queryWrapper.orderByDesc(<span class="string">&quot;id&quot;</span>); -&gt; sql 语句   orderByDesc<span class="string">&quot;id&quot;</span></span><br></pre></td></tr></table></figure>
<h1 id="3-获取对象中的int值，如果没有，则赋值为空"><a href="#3-获取对象中的int值，如果没有，则赋值为空" class="headerlink" title="3. 获取对象中的int值，如果没有，则赋值为空"></a>3. 获取对象中的int值，如果没有，则赋值为空</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">option为对象，score为对象中的一个参数</span><br><span class="line"><span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> Optional.of(option.getScore()).orElse(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>后端</category>
        <category>Java基础</category>
      </categories>
      <tags>
        <tag>Java基础</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo+GitHub搭建个人博客</title>
    <url>/2024/06/13/hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="第一篇私人博客，测试测试域名以及主题是否完整"><a href="#第一篇私人博客，测试测试域名以及主题是否完整" class="headerlink" title="第一篇私人博客，测试测试域名以及主题是否完整"></a>第一篇私人博客，测试测试域名以及主题是否完整</h2><p>今天是2024年6月13日，历经两个小时终于将自己的博客搭建起来了<br>本次搭建博客所使用的技术为： hexo+github+腾讯云注册的top类域名</p>
<span id="more"></span>
<h2 id="第一步注册GitHub账号"><a href="#第一步注册GitHub账号" class="headerlink" title="第一步注册GitHub账号"></a>第一步注册GitHub账号</h2><p>身为程序员应该不用教，略过，哈哈哈哈哈哈哈哈哈</p>
<h2 id="第二步-创建本地文件夹，用来存放以后的博客位置"><a href="#第二步-创建本地文件夹，用来存放以后的博客位置" class="headerlink" title="第二步 创建本地文件夹，用来存放以后的博客位置"></a>第二步 创建本地文件夹，用来存放以后的博客位置</h2><p>例如我在我本地的 D盘中创建了该文件夹<br><img src="/../imgList/image.png"></p>
<h2 id="第三步安装hexo"><a href="#第三步安装hexo" class="headerlink" title="第三步安装hexo"></a>第三步安装hexo</h2><p>依次执行以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli  //先安装hexo</span><br><span class="line">cd blog //进入要存放博客的文件夹</span><br><span class="line">hexo init //初始化文件夹</span><br><span class="line">npm install //  前端代码应该都要执行这一步</span><br><span class="line"></span><br><span class="line">// 设置你博客内容 ， 上一步执行完成后，会生成一个 _config.yml 文件，修改该文件</span><br><span class="line">title: Your Blog</span><br><span class="line">subtitle: &#x27;Your personal blog&#x27;</span><br><span class="line">description: &#x27;A blog about ...&#x27;</span><br><span class="line">author: Your Name</span><br><span class="line">language: en</span><br><span class="line"></span><br><span class="line">//配置指定的git仓库</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: 你的github仓库路径</span><br><span class="line">  branch: master/main  // 注意你创建的GitHub仓库的主分支是哪一个</span><br></pre></td></tr></table></figure>
<h2 id="第四步-编写文章并提交到GitHub"><a href="#第四步-编写文章并提交到GitHub" class="headerlink" title="第四步 编写文章并提交到GitHub"></a>第四步 编写文章并提交到GitHub</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &#123;文章名称&#125;</span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<h2 id="第五步-访问GitHub的路径查看能否显示"><a href="#第五步-访问GitHub的路径查看能否显示" class="headerlink" title="第五步 访问GitHub的路径查看能否显示"></a>第五步 访问GitHub的路径查看能否显示</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户名.github.io</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>博客</category>
        <category>搭建个人博客</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>域名</tag>
        <tag>hexo</tag>
        <tag>Md语法</tag>
      </tags>
  </entry>
  <entry>
    <title>初始化后端模板</title>
    <url>/2024/06/25/%E5%88%9D%E5%A7%8B%E5%8C%96%E5%90%8E%E7%AB%AF%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<!-- 
    title: 文章标题
    date: 文章创建时间
    update: 文章修改时间
    tags: 标签
    categories： 分类  后端：back-end   前端：front-end  其余：outher-end
    keywords: 文章关键字
 -->

<h1 id="简单初始化个后端模板，想到啥技术就往里边整合吧"><a href="#简单初始化个后端模板，想到啥技术就往里边整合吧" class="headerlink" title="简单初始化个后端模板，想到啥技术就往里边整合吧"></a>简单初始化个后端模板，想到啥技术就往里边整合吧</h1><h1 id="代码在这里✈"><a href="#代码在这里✈" class="headerlink" title="代码在这里✈"></a><a href="https://github.com/lisanjin9/sanjin-backend-init.git">代码在这里✈</a></h1>]]></content>
      <categories>
        <category>后端</category>
        <category>后端模板</category>
      </categories>
      <tags>
        <tag>后端</tag>
        <tag>后端模板</tag>
      </tags>
  </entry>
  <entry>
    <title>前端钩子函数总结</title>
    <url>/2024/06/19/%E5%89%8D%E7%AB%AF%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<!-- 
    title: 文章标题
    date: 文章创建时间
    update: 文章修改时间
    tags: 标签
    categories： 分类  后端：back-end   前端：front-end  其余：outher-end
    keywords: 文章关键字
 -->

<h2 id="useEffect"><a href="#useEffect" class="headerlink" title="useEffect"></a>useEffect</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> useEffect(() =&gt; &#123;</span><br><span class="line">  setCurrentQuestion(question[current - 1]);</span><br><span class="line">&#125;, [current]);</span><br><span class="line"></span><br><span class="line">用法： 监视参数发生变化，调用其他方法</span><br><span class="line">在页面中： current发生变化后，会调用 setCurrentQuestion 方法</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
        <category>函数集合</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>模板整合knife4j</title>
    <url>/2024/06/28/%E6%A8%A1%E6%9D%BF%E6%95%B4%E5%90%88knife4j/</url>
    <content><![CDATA[<!-- 
    title: 文章标题
    date: 文章创建时间
    update: 文章修改时间
    tags: 标签
    categories： 分类  后端：back-end   前端：front-end  其余：outher-end
    keywords: 文章关键字
 -->

<h1 id="整合后端模板最终效果"><a href="#整合后端模板最终效果" class="headerlink" title="整合后端模板最终效果"></a>整合后端模板最终效果</h1><p><img src="/../imgList/springboot-init-1.png" alt="整合后端模板结果图"></p>
<h1 id="1-引入依赖"><a href="#1-引入依赖" class="headerlink" title="1. 引入依赖"></a>1. 引入依赖</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">	&lt;groupId&gt;com.github.xiaoymin&lt;/groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;knife4j-openapi2-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">	&lt;version&gt;4.4.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h1 id="2-添加yml配置文件"><a href="#2-添加yml配置文件" class="headerlink" title="2. 添加yml配置文件"></a>2. 添加yml配置文件</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 接口文档配置</span><br><span class="line">knife4j:</span><br><span class="line">  enable: true</span><br><span class="line">  openapi:</span><br><span class="line">    title: &quot;金答评判系统&quot;</span><br><span class="line">    version: 1.0</span><br><span class="line">    group:</span><br><span class="line">      default:</span><br><span class="line">        api-rule: package</span><br><span class="line">        api-rule-resources:</span><br><span class="line">          - com.sanjin.controller   ## 对应controller目录</span><br></pre></td></tr></table></figure>
<h2 id="这样纠正和完成了，直接打开网址：-http-localhost-8080-doc-html-就能看到了"><a href="#这样纠正和完成了，直接打开网址：-http-localhost-8080-doc-html-就能看到了" class="headerlink" title="这样纠正和完成了，直接打开网址： http://localhost:8080/doc.html 就能看到了"></a>这样纠正和完成了，直接打开网址： <a href="http://localhost:8080/doc.html">http://localhost:8080/doc.html</a> 就能看到了</h2><h1 id="3-网上都说还要配置java文件，-其实不需要那么麻烦，直接按照knife4j官网配置就行"><a href="#3-网上都说还要配置java文件，-其实不需要那么麻烦，直接按照knife4j官网配置就行" class="headerlink" title="3. 网上都说还要配置java文件， 其实不需要那么麻烦，直接按照knife4j官网配置就行"></a>3. 网上都说还要配置java文件， 其实不需要那么麻烦，直接按照knife4j官网配置就行</h1><h1 id="官网传送门✈"><a href="#官网传送门✈" class="headerlink" title="官网传送门✈"></a><a href="https://doc.xiaominfo.com/docs/quick-start">官网传送门✈</a></h1>]]></content>
      <categories>
        <category>后端</category>
        <category>后端模板</category>
      </categories>
      <tags>
        <tag>后端</tag>
        <tag>后端模板</tag>
      </tags>
  </entry>
  <entry>
    <title>模板整合智谱AI</title>
    <url>/2024/07/13/%E6%A8%A1%E6%9D%BF%E6%95%B4%E5%90%88%E6%99%BA%E8%B0%B1AI/</url>
    <content><![CDATA[<!-- 
    title: 文章标题
    date: 文章创建时间
    update: 文章修改时间
    tags: 标签
    categories： 分类  后端：back-end   前端：front-end  其余：outher-end
    keywords: 文章关键字
 -->
<h1 id="易达系统中使用智谱AI流程"><a href="#易达系统中使用智谱AI流程" class="headerlink" title="易达系统中使用智谱AI流程"></a>易达系统中使用智谱AI流程</h1><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;cn.bigmodel.openapi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;oapi-java-sdk&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;release-V4-<span class="number">2.0</span><span class="number">.2</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h2 id="yml文件中进行配置"><a href="#yml文件中进行配置" class="headerlink" title="yml文件中进行配置"></a>yml文件中进行配置</h2><ul>
<li>首先打开<a href="https://maas.aminer.cn/dev/howuse/privacypolicy">智谱AI开放平台</a>注册账号<br> <img src="/../imgList/zhipuAI.png" alt="智谱AI注册结束后"></li>
<li>将图片中的API Key复制一下填写入下图的yml配置文件里 <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># AI 配置</span></span><br><span class="line"><span class="attr">ai:</span></span><br><span class="line">  <span class="attr">appKey:</span> <span class="string">xxx</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="代码中的调用方式"><a href="#代码中的调用方式" class="headerlink" title="代码中的调用方式"></a>代码中的调用方式</h2><ul>
<li>定义一个工具类 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;ai&quot;)</span>   <span class="comment">//通过该注解引入yml中配置的ai-appKey参数</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AiConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String appKey;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ClientV4 <span class="title function_">getClientV4</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ClientV4</span>.Builder(appKey).build();  <span class="comment">// 将ClientV4注入到Bean中， 调用类就可以通过@Resource获取</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>代码调用需要按需传递参数，参考<a href="https://maas.aminer.cn/dev/api#glm-4v">这里</a> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">     <span class="comment">// 构建请求</span></span><br><span class="line">    <span class="type">ChatCompletionRequest</span> <span class="variable">chatCompletionRequest</span> <span class="operator">=</span> ChatCompletionRequest.builder()</span><br><span class="line">            .model(Constants.ModelChatGLM4)</span><br><span class="line">            .stream(stream)</span><br><span class="line">            .temperature(temperature)</span><br><span class="line">            .invokeMethod(Constants.invokeMethod)</span><br><span class="line">            .messages(messages)</span><br><span class="line">            .build();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">ModelApiResponse</span> <span class="variable">invokeModelApiResp</span> <span class="operator">=</span> clientV4.invokeModelApi(chatCompletionRequest);</span><br><span class="line">        <span class="keyword">return</span> invokeModelApiResp.getData().getChoices().get(<span class="number">0</span>).toString(); <span class="comment">// 该段返回的内容则为智谱AI生成的内容</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.SYSTEM_ERROR, e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>后端</category>
        <category>后端模板</category>
      </categories>
      <tags>
        <tag>后端</tag>
        <tag>后端模板</tag>
      </tags>
  </entry>
  <entry>
    <title>策略模式</title>
    <url>/2024/07/02/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<!-- 
    title: 文章标题
    date: 文章创建时间
    update: 文章修改时间
    tags: 标签
    categories： 分类  后端：back-end   前端：front-end  其余：outher-end
    keywords: 文章关键字
 -->

<h1 id="1-策略模式"><a href="#1-策略模式" class="headerlink" title="1.  策略模式"></a>1.  策略模式</h1><h3 id="1-第一步-定义一个接口"><a href="#1-第一步-定义一个接口" class="headerlink" title="1. 第一步 定义一个接口"></a>1. 第一步 定义一个接口</h3> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Strategy</span> &#123;</span><br><span class="line">    String <span class="title function_">doScore</span><span class="params">(List&lt;Integer&gt; list)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="2-第二部定义一个注释类型"><a href="#2-第二部定义一个注释类型" class="headerlink" title="2. 第二部定义一个注释类型"></a>2. 第二部定义一个注释类型</h3><ul>
<li>通过@Target标签来定义作用范围，其参考值见类的定义：java.lang.annotation.ElementType</li>
<li>通过@Retention标签来定义生命周期，其参考值见类的定义：java.lang.annotation.RetentionPolicy</li>
<li>通过@Component标签，将其注入到Bean中，方便使用 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> StrategyConfig &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">appType</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">strategy</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="3-编写相对应的策略"><a href="#3-编写相对应的策略" class="headerlink" title="3. 编写相对应的策略"></a>3. 编写相对应的策略</h3><ul>
<li>我这里写了两个策略。 具体调用那个策略是通过 @StrategyConfig(appType &#x3D; 1, strategy &#x3D; 1) 来决定的<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@StrategyConfig(appType = 1, strategy = 1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StrategyDemo01</span> <span class="keyword">implements</span> <span class="title class_">Strategy</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">doScore</span><span class="params">(List list)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行策略01&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@StrategyConfig(appType = 0, strategy = 1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StrategyDemo02</span> <span class="keyword">implements</span> <span class="title class_">Strategy</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">doScore</span><span class="params">(List list)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行策略02&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="4-编写执行器"><a href="#4-编写执行器" class="headerlink" title="4. 编写执行器"></a>4. 编写执行器</h3><ul>
<li>通过@Resource注解来获取到所有的策略，因为两个策略模式都添加了@StrategyConfig 注解，又因为StrategyConfig注入到Bean中了，所以能获取到</li>
<li>循环策略， 通过<strong>isAnnotationPresent</strong>来检查strategy是否拥有StrategyConfig注解</li>
<li>StrategyConfig是一个注解类型，所以通过<strong>getAnnotation</strong>这行代码获取strategy对象上StrategyConfig注解的实例</li>
<li>依次判断appType参数是否与注解中的参数一致，一致的话则调用该策略<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StrategyExecutor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Strategy&gt; strategyList;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">doScore</span><span class="params">(List&lt;Integer&gt; list)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">for</span> (Strategy strategy : strategyList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (strategy.getClass().isAnnotationPresent(StrategyConfig.class))&#123;</span><br><span class="line">                <span class="type">StrategyConfig</span> <span class="variable">annotation</span> <span class="operator">=</span> strategy.getClass().getAnnotation(StrategyConfig.class);</span><br><span class="line">                  <span class="keyword">if</span> (annotation.appType() == list.get(<span class="number">0</span>))&#123;</span><br><span class="line">                    <span class="keyword">return</span> strategy.doScore(list);</span><br><span class="line">                  &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;no strategy support&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p><a href="https://github.com/lisanjin9/sanjin-backend-init/tree/master/src/main/java/com/sanjin/celuemoshi">源代码在这里✈ </a></p>
]]></content>
      <categories>
        <category>后端</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS + 宝塔 部署前后端分离项目</title>
    <url>/2024/07/15/CentOS%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<h1 id="1-安装宝塔面板"><a href="#1-安装宝塔面板" class="headerlink" title="1. 安装宝塔面板"></a>1. 安装宝塔面板</h1> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh https://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh ed8484bec</span><br></pre></td></tr></table></figure>
<p><strong>出现此图则为安装成功</strong><br><img src="/../imgList/CentOS/CentOS-01.png" alt="出现此图则为安装成功"></p>
<h1 id="2-访问外网面板地址"><a href="#2-访问外网面板地址" class="headerlink" title="2. 访问外网面板地址"></a>2. 访问外网面板地址</h1><p><strong>需要将宝塔面板中的端口开放后才能访问</strong><br><img src="/../imgList/CentOS/CentOS-02.png" alt="需要将宝塔面板中的端口开放后才能访问"><br><strong>访问成功如图</strong><br><img src="/../imgList/CentOS/CentOS-03.png" alt="访问成功如图"><br><img src="/../imgList/CentOS/CentOS-04.png" alt="访问成功如图"></p>
<h1 id="3-下载mysql等"><a href="#3-下载mysql等" class="headerlink" title="3. 下载mysql等"></a>3. 下载mysql等</h1><p><strong>宝塔面板推荐下载的 LNMP</strong></p>
<h1 id="4-链接数据库导入数据"><a href="#4-链接数据库导入数据" class="headerlink" title="4. 链接数据库导入数据"></a>4. 链接数据库导入数据</h1><p><img src="/../imgList/CentOS/CenOS-6.png" alt="链接数据库导入数据"><br><img src="/../imgList/CentOS/CenOS-8.png" alt="链接数据库导入数据"><br><img src="/../imgList/CentOS/CenOS-7.png" alt="链接数据库导入数据"><br><img src="/../imgList/CentOS/CenOS-9.png" alt="链接数据库导入数据"></p>
<h1 id="5-下载JDK"><a href="#5-下载JDK" class="headerlink" title="5. 下载JDK"></a>5. 下载JDK</h1><p><img src="/../imgList/CentOS/CenOS-5.png" alt="下载JDK"> </p>
<h1 id="6-开始部署后端项目"><a href="#6-开始部署后端项目" class="headerlink" title="6. 开始部署后端项目"></a>6. 开始部署后端项目</h1><p><img src="/../imgList/CentOS/CenOS-11.png" alt="开始部署后端项目"><br><strong>此处要注意 端口要与后端项目配置文件里的端口一致</strong><br><img src="/../imgList/CentOS/CenOS-10.png" alt="开始部署后端项目"></p>
<h1 id="7-开始部署前端代码"><a href="#7-开始部署前端代码" class="headerlink" title="7. 开始部署前端代码"></a>7. 开始部署前端代码</h1><p><img src="/../imgList/CentOS/CenOS-12.png" alt="alt text"><br><img src="/../imgList/CentOS/CenOS-13.png" alt="alt text"><br><img src="/../imgList/CentOS/CenOS-14.png" alt="alt text"><br><img src="/../imgList/CentOS/CenOS-15.png" alt="alt text"></p>
<h1 id="8-验证是否部署成功"><a href="#8-验证是否部署成功" class="headerlink" title="8. 验证是否部署成功"></a>8. 验证是否部署成功</h1><p><img src="/../imgList/CentOS/CenOS-16.png" alt="alt text"></p>
<h1 id="9-部署存在的问题"><a href="#9-部署存在的问题" class="headerlink" title="9. 部署存在的问题"></a>9. 部署存在的问题</h1>]]></content>
      <categories>
        <category>项目部署</category>
        <category>CentOS + 宝塔 部署前后端分离项目</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>宝塔</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS+docker部署前后端分离新项目</title>
    <url>/2024/07/27/CentOS-docker%E9%83%A8%E7%BD%B2%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E6%96%B0%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<h1 id="完整顺序"><a href="#完整顺序" class="headerlink" title="完整顺序"></a>完整顺序</h1><h2 id="1-CentOS安装docker"><a href="#1-CentOS安装docker" class="headerlink" title="1. CentOS安装docker"></a>1. CentOS安装docker</h2><p><strong><a href="https://lisanjin9.top/2024/07/27/CentOS%E5%AE%89%E8%A3%85docker/">CentOS安装docker</a></strong></p>
<h2 id="2-docker安装mysql"><a href="#2-docker安装mysql" class="headerlink" title="2. docker安装mysql"></a>2. docker安装mysql</h2><p><strong><a href="https://lisanjin9.top/2024/07/27/docker%E5%AE%89%E8%A3%85mysql/">docker安装mysql</a></strong></p>
<h2 id="3-安装好需要将服务器防火墙开通mysql端口"><a href="#3-安装好需要将服务器防火墙开通mysql端口" class="headerlink" title="3. 安装好需要将服务器防火墙开通mysql端口"></a>3. 安装好需要将服务器防火墙开通mysql端口</h2><p><strong>不开通端口应该连不上，上次宝塔面板里边那个安全没开通连不上</strong><br><img src="/../imgList/mysql/mysql-5.png" alt="开通端口"></p>
<h2 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h2><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1>]]></content>
      <categories>
        <category>项目部署</category>
        <category>CentOS+docker部署前后端分离新项目</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS安装docker</title>
    <url>/2024/07/27/CentOS%E5%AE%89%E8%A3%85docker/</url>
    <content><![CDATA[<h1 id="1-安装系统工具"><a href="#1-安装系统工具" class="headerlink" title="1. 安装系统工具"></a>1. 安装系统工具</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure>
<p><img src="/../imgList/docker/docker-1.png" alt="安装成功"></p>
<h1 id="2-添加软件源信息"><a href="#2-添加软件源信息" class="headerlink" title="2. 添加软件源信息"></a>2. 添加软件源信息</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>
<p><img src="/../imgList/docker/docker-3.png" alt="安装成功"></p>
<h1 id="3-提升yum安装速度"><a href="#3-提升yum安装速度" class="headerlink" title="3. 提升yum安装速度"></a>3. 提升yum安装速度</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum makecache fast</span><br></pre></td></tr></table></figure>
<p><img src="/../imgList/docker/docker-4.png" alt="提升yum安装速度"></p>
<h1 id="4-安装docker"><a href="#4-安装docker" class="headerlink" title="4. 安装docker"></a>4. 安装docker</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br></pre></td></tr></table></figure>
<p><img src="/../imgList/docker/docker-5.png" alt="安装成功"></p>
<h1 id="5-关闭防火墙"><a href="#5-关闭防火墙" class="headerlink" title="5. 关闭防火墙"></a>5. 关闭防火墙</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop forewalld</span><br><span class="line"></span><br><span class="line">systemctl disable forewalld</span><br></pre></td></tr></table></figure>

<h1 id="6-启动docker并且查看运行状态"><a href="#6-启动docker并且查看运行状态" class="headerlink" title="6.  启动docker并且查看运行状态"></a>6.  启动docker并且查看运行状态</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看docker状态</span><br><span class="line">systemctl status docker</span><br><span class="line"></span><br><span class="line"># 启动docker</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>
<p><img src="/../imgList/docker/docker-6.png" alt="启动docker"></p>
<h1 id="7-设置docker开机启动"><a href="#7-设置docker开机启动" class="headerlink" title="7. 设置docker开机启动"></a>7. 设置docker开机启动</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">设置开机启动</span><br><span class="line">systemctl enable docker</span><br><span class="line"></span><br><span class="line">systemctl disable docker</span><br></pre></td></tr></table></figure>

<h1 id="8-配置镜像"><a href="#8-配置镜像" class="headerlink" title="8. 配置镜像"></a>8. 配置镜像</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p /etc/docker</span><br><span class="line"></span><br><span class="line">tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://780urbjd.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 检查配置</span><br><span class="line">cat /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>

<h1 id="9-重启docker"><a href="#9-重启docker" class="headerlink" title="9. 重启docker"></a>9. 重启docker</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

<p><img src="/../imgList/docker/docker-7.png" alt="查看是否安装成功"></p>
]]></content>
      <categories>
        <category>项目部署</category>
        <category>docker安装应用</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker安装mysql</title>
    <url>/2024/07/27/docker%E5%AE%89%E8%A3%85mysql/</url>
    <content><![CDATA[<h1 id="docker安装mysql"><a href="#docker安装mysql" class="headerlink" title="docker安装mysql"></a>docker安装mysql</h1><h2 id="1-查看docker有哪些mysql镜像"><a href="#1-查看docker有哪些mysql镜像" class="headerlink" title="1. 查看docker有哪些mysql镜像"></a>1. 查看docker有哪些mysql镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker search mysql</span><br></pre></td></tr></table></figure>
<p><img src="/../imgList/mysql/mysql-2.png" alt="查看镜像"></p>
<h2 id="2-下载mysql5-7版本"><a href="#2-下载mysql5-7版本" class="headerlink" title="2. 下载mysql5.7版本"></a>2. 下载mysql5.7版本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 下载5.7版本的mysql</span><br><span class="line">docker pull mysql:5.7</span><br><span class="line"></span><br><span class="line"># 通过docker查看是否下载成功</span><br><span class="line">docker images</span><br></pre></td></tr></table></figure>
<p><img src="/../imgList/mysql/mysql-3.png" alt="下载成功"></p>
<h2 id="3-运行镜像"><a href="#3-运行镜像" class="headerlink" title="3. 运行镜像"></a>3. 运行镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -p 3306:3306 --name mysql57 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</span><br></pre></td></tr></table></figure>
<p><img src="/../imgList/mysql/mysql-4.png" alt="启动成功"></p>
]]></content>
      <categories>
        <category>项目部署</category>
        <category>docker安装应用</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
</search>
